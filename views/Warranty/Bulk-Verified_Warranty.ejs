<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bulk Warranty Verify</title>
    <link rel="stylesheet" href="/css/Bulk-Warranty-Verify.css">
    <style>
        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }
        .modal-content {
            background-color: #fefefe;
            margin: 10% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 600px;
            position: relative;
            border-radius: 8px;
        }
        .close {
            position: absolute;
            right: 20px;
            top: 10px;
            font-size: 24px;
            font-weight: bold;
            cursor: pointer;
        }
        /* Pagination styles */
        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }
        .pagination button {
            padding: 10px;
            margin: 5px;
            border: none;
            background-color: orange;
            color: white;
            cursor: pointer;
            border-radius: 4px;
        }
        .pagination button.disabled {
            background-color: orange;
            opacity: 0.6;
            cursor: not-allowed;
        }
        
        /* Search container styling */
        .search-container {
            margin: 20px 0;
            text-align: center;
        }
        
        .search-container input {
            width: 60%;
            padding: 10px;
            border: 3px solid orange;
            border-radius: 5px;
            font-size: 16px;
            margin-right: 10px;
        }
        
        .search-container button {
            padding: 10px 15px;
            background-color: orange;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }
        
        /* No results message */
        #notFoundMessage {
            text-align: center;
            color: red;
            font-weight: bold;
            margin: 20px 0;
            display: none;
        }
        
        /* Table styling */
        .serial-model-table {
            width: 100%;
            border-collapse: collapse;
            margin: 15px 0;
        }
        
        .serial-model-table th, 
        .serial-model-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        
        .serial-model-table th {
            background-color: #f2f2f2;
            color: #333;
        }
        
        .serial-model-table tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        
        .serial-model-table tr:hover {
            background-color: #f1f1f1;
        }
        
        /* Highlight search matches */
        .highlight {
            background-color: yellow;
            padding: 2px;
            border-radius: 3px;
        }
    </style>
</head>
<body>
    <nav style="display: flex; justify-content: space-between; align-items: center; padding: 1em; background-color: lightgray; color: black; width: 100%; position: fixed; top: 0; left: 0; z-index: 1000;">
        <div class="logo" style="font-size: 1.5em;">
            <img src="/images/BitBox_logo1.png" alt="">
        </div>
        <div class="title" style="font-size: 1.2em; margin-right: 25px;">
            Bitbox Admin Panel
        </div>
        <% if (loggedIN) { %> <!-- Check if user is logged in -->
            <form action="/api/auth/logout" method="POST" style="margin-right: 50px;">
                <button type="submit" style="background-color: #ff0000; color: white; border: none; padding: 10px; font-size: 1em; cursor: pointer; border-radius: 4px; transition: background-color 0.3s ease;">Logout</button>
            </form>
        <% } %>
    </nav>

    <div class="warranty-info" style="margin-top: 8%;width: 80%;
    margin: 100px auto;
    padding: 20px;
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
        <h2>All Verified Warranties</h2>
        <div class="controls">
            <div class="search-container">
                <input type="text" id="searchInput" placeholder="Search by Serial Number or Batch ID">
                <button onclick="searchWarranty()">Search</button>
            </div>
        </div>
        
        <!-- No results message -->
        <p id="notFoundMessage">No warranties found matching your search criteria.</p>
        
        <ul id="warrantyList">
            <% groupedWarranties.forEach(group => { %>
                <li class="<%= group.commonFields.verify ? 'verified' : 'unverified' %>" data-batch="<%= group._id.toLowerCase() %>">
                    <strong>Batch:</strong> <%= group._id %><br>
                    <strong>Name:</strong> <%= group.commonFields.name %><br>
                    <strong>Email:</strong> <%= group.commonFields.email %><br>
                    <strong>Purchase Date:</strong> <%= group.commonFields.purchaseDate.toDateString() %><br>
                    <strong>Expiry Date:</strong> <%= new Date(group.commonFields.expiryDate).toLocaleDateString() %><br>
                    <strong>Address:</strong> <%= group.commonFields.address %><br>
                    <strong>City:</strong> <%= group.commonFields.city %><br>
                    <strong>Pincode:</strong> <%= group.commonFields.pincode %><br>
                    <strong>State:</strong> <%= group.commonFields.state %><br>
                    <strong>Phone Number:</strong> <%= group.commonFields.phoneNumber %><br>
                    <strong>Bill:</strong> <a href="http://admin.bitboxpc.com/<%= group.commonFields.billPdf %>" target="_blank"><%= group.commonFields.billPdf %></a><br>
                    <strong>Verified:</strong> <%= group.commonFields.verify ? 'Yes' : 'No' %><br>
                    <strong>Vendor:</strong> <%= group.commonFields.purchaseDetails %><br>
                    <strong>Warranty Type:</strong> <%= group.commonFields.warrantyType %><br>

                    <h4>Serial Numbers and Models:</h4>
                    <table class="serial-model-table">
                        <thead>
                            <tr>
                                <th>Serial Number</th>
                                <th>Model</th>
                                <th>Certificate</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% group.serialAndModel.forEach(item => { %>
                                <tr data-serial="<%= item.serialNumber.toLowerCase() %>">
                                    <td><%= item.serialNumber %></td>
                                    <td><%= item.model %></td>
                                    <td>
                                        <% if (item.certificateLink) { %>
                                            <a href="http://admin.bitboxpc.com/<%= item.certificateLink %>" target="_blank">View Certificate</a>
                                        <% } else { %>
                                            No certificate available
                                        <% } %>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>

                    <!-- Update Button -->
                    <button onclick="openUpdateModal('<%= group._id %>')">Update</button>

                    <!-- Modal for Update -->
                    <div id="updateModal_<%= group._id %>" class="modal">
                        <div class="modal-content">
                            <span class="close" onclick="closeUpdateModal('<%= group._id %>')">&times;</span>
                            <form id="updateForm_<%= group._id %>" onsubmit="submitUpdateForm('<%= group._id %>'); return false;">
                                <h2>Update Warranty Information</h2>
                                <label>Batch ID:</label>
                                <input type="text" value="<%= group._id %>" readonly><br><br>
                                <label>Name:</label>
                                <input type="text" name="name" value="<%= group.commonFields.name %>" required><br><br>
                                <label>Vendor:</label>
                                <input type="text" name="purchaseDetails" value="<%= group.commonFields.purchaseDetails %>" required><br><br>
                                <label>Email:</label>
                                <input type="email" name="email" value="<%= group.commonFields.email %>" required><br><br>
                                <label>Address:</label>
                                <input type="text" name="address" value="<%= group.commonFields.address %>" required><br><br>
                                <label>Purchase Date:</label>
                                <input type="date" name="purchaseDate" value="<%= group.commonFields.purchaseDate ? group.commonFields.purchaseDate.toISOString().slice(0,10) : '' %>" required ><br><br>
                                
                                <%
                                let duration = '';
                                if (group.commonFields.purchaseDate && group.commonFields.expiryDate) {
                                    const purchaseDate = new Date(group.commonFields.purchaseDate);
                                    const expiryDate = new Date(group.commonFields.expiryDate);
                                    const durationInYears = (expiryDate - purchaseDate) / (1000 * 60 * 60 * 24 * 365.25);
                                    duration = Math.round(durationInYears * 10) / 10; // Round to 1 decimal place
                                }
                                %>
                                <label>Duration (Years):</label>
                                <input type="number" name="duration" value="<%= duration %>" ><br><br>
                                
                                <label>City:</label>
                                <input type="text" name="city" value="<%= group.commonFields.city %>" required><br><br>
                                <label>Pincode:</label>
                                <input type="text" name="pincode" value="<%= group.commonFields.pincode %>" required><br><br>
                                <label>State:</label>
                                <input type="text" name="state" value="<%= group.commonFields.state %>" required><br><br>
                                <label>Phone Number:</label>
                                <input type="text" name="phoneNumber" value="<%= group.commonFields.phoneNumber %>" required><br><br>
                                <label>Model:</label>
                                <input type="text" name="model" value="<%= group.serialAndModel[0].model %>" required><br><br>
                                <label>Bill PDF:</label>
                                <input type="text" name="billPdf" value="<%= group.commonFields.billPdf %>" required><br><br>
                                <label>Warranty Type:</label>
                                <input type="text" name="warrantyType" value="<%= group.commonFields.warrantyType %>" required><br><br>
                                <% if (!group.commonFields.verify) { %>
                                <label>Expiry Date:</label>
                                <input type="date" name="expiryDate" value="<%= group.commonFields.expiryDate.toString().split('T')[0] %>" required><br><br>
                                <% } %>
                                <button type="submit">Submit</button>
                            </form>
                        </div>
                    </div>

                    <% if (!group.commonFields.verify) { %>
                        <form action="/api/warrantyManagement/bulk-warranty-verify" method="POST">
                            <input type="hidden" name="batch" value="<%= group._id %>">
                            <input type="hidden" name="email" value="<%= group.commonFields.email %>">
                            <input type="hidden" name="name" value="<%= group.commonFields.name %>">
                            <input type="hidden" name="address" value="<%= group.commonFields.address %>">
                            <input type="hidden" name="city" value="<%= group.commonFields.city %>">
                            <input type="hidden" name="phoneNumber" value="<%= group.commonFields.phoneNumber %>">
                            <input type="hidden" name="state" value="<%= group.commonFields.state %>">
                            <input type="hidden" name="pincode" value="<%= group.commonFields.pincode %>">
                            <input type="hidden" name="model" value="<%= group.serialAndModel[0].model %>">
                            <input type="hidden" name="purchaseDate" value="<%= group.commonFields.purchaseDate %>">
                            <input type="hidden" name="expiryDate" value="<%= group.commonFields.expiryDate %>">
                            <input type="hidden" name="billPdf" value="<%= group.commonFields.billPdf %>">
                            <input type="hidden" name="purchaseDetails" value="<%= group.commonFields.purchaseDetails %>">
                            <input type="hidden" name="warrantyType" value="<%= group.commonFields.warrantyType %>">
                            <input type="hidden" name="serialNumbers" value="<%= group.serialAndModel.map(item => item.serialNumber).join(',') %>">
                            <button type="submit">Verify</button>
                        </form>
                    <% } %>
                </li>
               
            <% }); %>
        </ul>
        <div class="pagination" id="paginationControls"></div>
    </div>

    <script>
        // Variables for pagination
        const itemsPerPage = 10;
        let currentPage = 1;
        let warrantyItems = Array.from(document.getElementById('warrantyList').children);
        let filteredItems = [...warrantyItems]; // Keep track of currently filtered items
        const totalPages = Math.ceil(warrantyItems.length / itemsPerPage);

        // Add event listener for the search input to handle Enter key
        document.getElementById('searchInput').addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                searchWarranty();
            }
        });

        // Function to show a specific page
        function showPage(page) {
            currentPage = page;
            const start = (page - 1) * itemsPerPage;
            const end = start + itemsPerPage;
            
            // Hide all warranty items first
            filteredItems.forEach(item => {
                item.style.display = 'none';
            });
            
            // Show only the items for current page
            for (let i = start; i < end && i < filteredItems.length; i++) {
                filteredItems[i].style.display = 'block';
            }
            
            updatePaginationControls();
        }

        // Update pagination controls based on filtered items
        function updatePaginationControls() {
            const paginationControls = document.getElementById('paginationControls');
            paginationControls.innerHTML = '';
            
            const totalFilteredPages = Math.ceil(filteredItems.length / itemsPerPage);
            
            if (totalFilteredPages <= 1) {
                // No pagination needed
                return;
            }
            
            // Add "Previous" button
            const prevButton = document.createElement('button');
            prevButton.textContent = 'Previous';
            prevButton.onclick = () => {
                if (currentPage > 1) showPage(currentPage - 1);
            };
            prevButton.disabled = currentPage === 1;
            prevButton.classList.toggle('disabled', currentPage === 1);
            paginationControls.appendChild(prevButton);
            
            // Determine which page buttons to show
            const maxVisibleButtons = 5;
            let startPage = Math.max(1, currentPage - Math.floor(maxVisibleButtons / 2));
            let endPage = Math.min(totalFilteredPages, startPage + maxVisibleButtons - 1);
            
            if (endPage - startPage + 1 < maxVisibleButtons) {
                startPage = Math.max(1, endPage - maxVisibleButtons + 1);
            }
            
            // Add page number buttons
            for (let i = startPage; i <= endPage; i++) {
                const button = document.createElement('button');
                button.textContent = i;
                button.classList.toggle('disabled', i === currentPage);
                button.onclick = () => showPage(i);
                paginationControls.appendChild(button);
            }
            
            // Add "Next" button
            const nextButton = document.createElement('button');
            nextButton.textContent = 'Next';
            nextButton.onclick = () => {
                if (currentPage < totalFilteredPages) showPage(currentPage + 1);
            };
            nextButton.disabled = currentPage === totalFilteredPages;
            nextButton.classList.toggle('disabled', currentPage === totalFilteredPages);
            paginationControls.appendChild(nextButton);
        }

        // Search function
        function searchWarranty() {
            const input = document.getElementById('searchInput');
            const filter = input.value.trim().toLowerCase();
            const notFoundMessage = document.getElementById('notFoundMessage');
            
            // If search is empty, reset to show all warranties
            if (filter === '') {
                filteredItems = [...warrantyItems];
                notFoundMessage.style.display = 'none';
                currentPage = 1;
                showPage(1);
                return;
            }
            
            // Filter warranty items
            filteredItems = warrantyItems.filter(item => {
                // Check batch ID
                const batchId = item.getAttribute('data-batch') || '';
                if (batchId.includes(filter)) return true;
                
                // Check all serial numbers in the table rows
                const serialRows = Array.from(item.querySelectorAll('tr[data-serial]'));
                return serialRows.some(row => {
                    const serialNumber = row.getAttribute('data-serial') || '';
                    return serialNumber.includes(filter);
                });
            });
            
            // Show/hide "No results" message
            notFoundMessage.style.display = filteredItems.length === 0 ? 'block' : 'none';
            
            // Reset to first page and update display
            currentPage = 1;
            showPage(1);
            
            // Optional: Highlight matches
            if (filter !== '') {
                highlightMatches(filter);
            } else {
                clearHighlights();
            }
        }
        
        // Function to highlight search matches
        function highlightMatches(searchText) {
            // First clear existing highlights
            clearHighlights();
            
            if (!searchText.trim()) return;
            
            // Find all visible warranty items
            filteredItems.forEach(item => {
                // Highlight batch ID if it matches
                const batchText = item.querySelector('strong:first-child').nextSibling;
                if (batchText && batchText.textContent.toLowerCase().includes(searchText)) {
                    const highlighted = batchText.textContent.replace(
                        new RegExp(searchText, 'gi'),
                        match => `<span class="highlight">${match}</span>`
                    );
                    // Need to create a temp element to hold the HTML
                    const tempSpan = document.createElement('span');
                    tempSpan.innerHTML = highlighted;
                    batchText.parentNode.replaceChild(tempSpan, batchText);
                }
                
                // Highlight serial numbers
                const serialCells = item.querySelectorAll('td:first-child');
                serialCells.forEach(cell => {
                    if (cell.textContent.toLowerCase().includes(searchText)) {
                        cell.innerHTML = cell.textContent.replace(
                            new RegExp(searchText, 'gi'),
                            match => `<span class="highlight">${match}</span>`
                        );
                    }
                });
            });
        }
        
        // Function to clear highlights
        function clearHighlights() {
            document.querySelectorAll('.highlight').forEach(span => {
                const parent = span.parentNode;
                parent.textContent = parent.textContent; // This removes all HTML and keeps just the text
            });
        }

        // Modal functions
        function openUpdateModal(batchId) {
            document.getElementById(`updateModal_${batchId}`).style.display = 'block';
        }

        function closeUpdateModal(batchId) {
            document.getElementById(`updateModal_${batchId}`).style.display = 'none';
        }

        function submitUpdateForm(batchId) {
            const form = document.getElementById(`updateForm_${batchId}`);
            const formData = new FormData(form);
            
            fetch(`/api/warrantyManagement/update/${batchId}`, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Warranty Updated');
                    location.reload(); // Reload the page to reflect changes
                } else {
                    alert('Warranty Updated');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Warranty Updated');
            });
        }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            // Add data attributes to all list items for better searching
            warrantyItems.forEach(item => {
                const batchId = item.querySelector('strong:first-child').nextSibling.textContent.trim();
                item.setAttribute('data-batch', batchId.toLowerCase());
            });
            
            // Initialize pagination
            showPage(1);
            
            // Clear search input on page load
            document.getElementById('searchInput').value = '';
        });
    </script>
</body>
</html>